dd <- data.frame(xx=c(x, xx,xx, xx), yy <- c(y, yy1, yy2, yy3), sd = rep(c("Normal", "df=9", "df=24", "df=199"), each=1000))
library("ggplot2")
xy <- data.frame(x,y)
myPlot <- ggplot(xy, aes(x, y))
myPlot <- myPlot + geom_line(size=1.5, col="Red")
myPlot
#myPlot <- myPlot + ggplot(data = dg, aes(xx, yy, col="Red") + geom_line(size=0.75))
myPlot <- myPlot + geom_line(data = dd, aes(xx, yy, col=factor(sd))) + geom_line(size=0.75) +
ggtitle("Normal distribution and t-distrbution with df = 9, 24, 199") +
theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=24, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22)) +
theme(legend.title=element_text(colour="Black", size=16, face="bold")) + scale_colour_discrete(name = "Normal and T-Distribution") +
guides(col = guide_legend(reverse = TRUE))
myPlot
x   <- seq(-5, 5,length=1000)
y   <- dnorm(x,mean=0, sd=1)
plot(x,y, type="l", lwd=1)
dg <- data.frame(x,y)
xx <- seq(-5, 5, length=1000)
yy1 <- dt(xx, 9)
yy2 <- dt(xx, 24)
yy3 <- dt(xx, 199)
dd <- data.frame(xx=c(x, xx,xx, xx), yy <- c(y, yy1, yy2, yy3), sd = rep(c("Normal", "df=9", "df=24", "df=199"), each=1000))
library("ggplot2")
xy <- data.frame(x,y)
myPlot <- ggplot(xy, aes(x, y))
myPlot <- myPlot + geom_line(size=1.5, col="Red")
myPlot
#myPlot <- myPlot + ggplot(data = dg, aes(xx, yy, col="Red") + geom_line(size=0.75))
myPlot <- myPlot + geom_line(data = dd, aes(xx, yy, col=factor(sd))) + geom_line(size=0.75) +
ggtitle("Normal distribution and t-distrbution with df = 9, 24, 199") + labs(x="X", y="Density")
theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=24, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22)) +
theme(legend.title=element_text(colour="Black", size=16, face="bold")) + scale_colour_discrete(name = "Normal and T-Distribution") +
guides(col = guide_legend(reverse = TRUE))
myPlot
x   <- seq(-5, 5,length=1000)
y   <- dnorm(x,mean=0, sd=1)
plot(x,y, type="l", lwd=1)
dg <- data.frame(x,y)
xx <- seq(-5, 5, length=1000)
yy1 <- dt(xx, 9)
yy2 <- dt(xx, 24)
yy3 <- dt(xx, 199)
dd <- data.frame(xx=c(x, xx,xx, xx), yy <- c(y, yy1, yy2, yy3), sd = rep(c("Normal", "df=9", "df=24", "df=199"), each=1000))
library("ggplot2")
xy <- data.frame(x,y)
myPlot <- ggplot(xy, aes(x, y))
myPlot <- myPlot + geom_line(size=1.5, col="Red")
myPlot
#myPlot <- myPlot + ggplot(data = dg, aes(xx, yy, col="Red") + geom_line(size=0.75))
myPlot <- myPlot + geom_line(data = dd, aes(xx, yy, col=factor(sd))) + geom_line(size=0.75) +
ggtitle("Normal distribution and t-distrbution with df = 9, 24, 199") + labs(x="X", y="Density") +
theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=24, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22)) +
theme(legend.title=element_text(colour="Black", size=16, face="bold")) + scale_colour_discrete(name = "Normal and T-Distribution") +
guides(col = guide_legend(reverse = TRUE))
myPlot
myPlot
x   <- seq(-5, 5,length=1000)
y   <- dnorm(x,mean=0, sd=1)
plot(x,y, type="l", lwd=1)
dg <- data.frame(x,y)
xx <- seq(-5, 5, length=1000)
yy1 <- dt(xx, 9)
yy2 <- dt(xx, 24)
yy3 <- dt(xx, 199)
dd <- data.frame(xx=c(x, xx,xx, xx), yy <- c(y, yy1, yy2, yy3), sd = rep(c("Normal", "df=9", "df=24", "df=199"), each=1000))
library("ggplot2")
xy <- data.frame(x,y)
myPlot <- ggplot(xy, aes(x, y))
myPlot <- myPlot + geom_line(size=1.5, col="Red")
myPlot
#myPlot <- myPlot + ggplot(data = dg, aes(xx, yy, col="Red") + geom_line(size=0.75))
myPlot <- myPlot + geom_line(data = dd, aes(xx, yy, col=factor(sd))) + geom_line(size=0.75) +
ggtitle("Normal distribution and t-distrbution with df = 9, 24, 199") + labs(x="X", y="Density") +
theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=24, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22)) +
theme(legend.title=element_text(colour="Black", size=16, face="bold")) + scale_colour_discrete(name = "Normal and T-Distribution") +
guides(col = guide_legend(reverse = TRUE)) + scale_y_continuous(limits = c(0.0, 0.6))
myPlot
x   <- seq(-5, 5,length=1000)
y   <- dnorm(x,mean=0, sd=1)
plot(x,y, type="l", lwd=1)
dg <- data.frame(x,y)
xx <- seq(-5, 5, length=1000)
yy1 <- dt(xx, 9)
yy2 <- dt(xx, 24)
yy3 <- dt(xx, 199)
dd <- data.frame(xx=c(x, xx,xx, xx), yy <- c(y, yy1, yy2, yy3), sd = rep(c("Normal", "df=9", "df=24", "df=199"), each=1000))
library("ggplot2")
xy <- data.frame(x,y)
myPlot <- ggplot(xy, aes(x, y))
myPlot <- myPlot + geom_line(size=1.5, col="Red")
myPlot
#myPlot <- myPlot + ggplot(data = dg, aes(xx, yy, col="Red") + geom_line(size=0.75))
myPlot <- myPlot + geom_line(data = dd, aes(xx, yy, col=factor(sd))) + geom_line(size=0.75) +
ggtitle("Normal distribution and t-distrbution with df = 9, 24, 199") + labs(x="X", y="Density") +
theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=24, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22)) +
theme(legend.title=element_text(colour="Black", size=16, face="bold")) + scale_colour_discrete(name = "Normal and T-Distribution") +
guides(col = guide_legend(reverse = TRUE)) + scale_y_continuous(limits = c(0.0, 0.6)) + scale_y_continuous(limits = c(-4.5, 4.5))
myPlot
x   <- seq(-5, 5,length=1000)
y   <- dnorm(x,mean=0, sd=1)
plot(x,y, type="l", lwd=1)
dg <- data.frame(x,y)
xx <- seq(-5, 5, length=1000)
yy1 <- dt(xx, 9)
yy2 <- dt(xx, 24)
yy3 <- dt(xx, 199)
dd <- data.frame(xx=c(x, xx,xx, xx), yy <- c(y, yy1, yy2, yy3), sd = rep(c("Normal", "df=9", "df=24", "df=199"), each=1000))
library("ggplot2")
xy <- data.frame(x,y)
myPlot <- ggplot(xy, aes(x, y))
myPlot <- myPlot + geom_line(size=1.5, col="Red")
myPlot
#myPlot <- myPlot + ggplot(data = dg, aes(xx, yy, col="Red") + geom_line(size=0.75))
myPlot <- myPlot + geom_line(data = dd, aes(xx, yy, col=factor(sd))) + geom_line(size=0.75) +
ggtitle("Normal distribution and t-distrbution with df = 9, 24, 199") + labs(x="X", y="Density") +
theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=24, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22)) +
theme(legend.title=element_text(colour="Black", size=16, face="bold")) + scale_colour_discrete(name = "Normal and T-Distribution") +
guides(col = guide_legend(reverse = TRUE)) + scale_y_continuous(limits = c(0.0, 0.6)) + scale_x_continuous(limits = c(-4.5, 4.5))
myPlot
x   <- seq(-5, 5,length=1000)
y   <- dnorm(x,mean=0, sd=1)
plot(x,y, type="l", lwd=1)
dg <- data.frame(x,y)
xx <- seq(-5, 5, length=1000)
yy1 <- dt(xx, 9)
yy2 <- dt(xx, 24)
yy3 <- dt(xx, 199)
dd <- data.frame(xx=c(x, xx,xx, xx), yy <- c(y, yy1, yy2, yy3), sd = rep(c("Normal", "df=9", "df=24", "df=199"), each=1000))
library("ggplot2")
xy <- data.frame(x,y)
myPlot <- ggplot(xy, aes(x, y))
myPlot <- myPlot + geom_line(size=1.5, col="Red")
myPlot
#myPlot <- myPlot + ggplot(data = dg, aes(xx, yy, col="Red") + geom_line(size=0.75))
myPlot <- myPlot + geom_line(data = dd, aes(xx, yy, col=factor(sd))) + geom_line(size=0.75) +
ggtitle("Normal distribution and t-distrbution with df = 9, 24, 199") + labs(x="X", y="Density") +
theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=24, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22)) +
theme(legend.title=element_text(colour="Black", size=16, face="bold")) + scale_colour_discrete(name = "Normal and T-Distribution") +
guides(col = guide_legend(reverse = TRUE)) + scale_y_continuous(limits = c(0.0, 0.5)) + scale_x_continuous(limits = c(-4.5, 4.5))
myPlot
x   <- seq(-5, 5,length=1000)
y   <- dnorm(x,mean=0, sd=1)
plot(x,y, type="l", lwd=1)
dg <- data.frame(x,y)
xx <- seq(-5, 5, length=1000)
yy1 <- dt(xx, 9)
yy2 <- dt(xx, 24)
yy3 <- dt(xx, 199)
dd <- data.frame(xx=c(x, xx,xx, xx), yy <- c(y, yy1, yy2, yy3), sd = rep(c("Normal", "df=9", "df=24", "df=199"), each=1000))
library("ggplot2")
xy <- data.frame(x,y)
myPlot <- ggplot(xy, aes(x, y))
myPlot <- myPlot + geom_line(size=1.5, col="Red")
myPlot
#myPlot <- myPlot + ggplot(data = dg, aes(xx, yy, col="Red") + geom_line(size=0.75))
myPlot <- myPlot + geom_line(data = dd, aes(xx, yy, col=factor(sd))) + geom_line(size=0.75) +
ggtitle("Normal distribution and t-distrbution with df = 9, 24, 199") + labs(x="X", y="Density") +
theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=24, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22)) +
theme(legend.title=element_text(colour="Black", size=16, face="bold")) + scale_colour_discrete(name = "Normal and T-Distribution") +
guides(col = guide_legend(reverse = TRUE)) + scale_y_continuous(limits = c(0.0, 0.5)) + scale_x_continuous(limits = c(-5, 5))
myPlot
x   <- seq(-5, 5,length=1000)
y   <- dnorm(x,mean=0, sd=1)
plot(x,y, type="l", lwd=1)
dg <- data.frame(x,y)
xx <- seq(-5, 5, length=1000)
yy1 <- dt(xx, 9)
yy2 <- dt(xx, 24)
yy3 <- dt(xx, 199)
dd <- data.frame(xx=c(x, xx,xx, xx), yy <- c(y, yy3, yy2, yy1), sd = rep(c("Normal", "df=199", "df=24", "df=9"), each=1000))
library("ggplot2")
xy <- data.frame(x,y)
myPlot <- ggplot(xy, aes(x, y))
myPlot <- myPlot + geom_line(size=1.5, col="Red")
myPlot
#myPlot <- myPlot + ggplot(data = dg, aes(xx, yy, col="Red") + geom_line(size=0.75))
myPlot <- myPlot + geom_line(data = dd, aes(xx, yy, col=factor(sd))) + geom_line(size=0.75) +
ggtitle("Normal distribution and t-distrbution with df = 1999, 24, 9") + labs(x="X", y="Density") +
theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=24, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22)) +
theme(legend.title=element_text(colour="Black", size=16, face="bold")) + scale_colour_discrete(name = "Normal and T-Distribution") +
guides(col = guide_legend(reverse = TRUE)) + scale_y_continuous(limits = c(0.0, 0.5)) + scale_x_continuous(limits = c(-5, 5))
myPlot
myPlot <- myPlot + coord_cartesian(xlim = c(1.5,3),ylim= c(0,0.1))
myPlot
myPlot <- myPlot + coord_cartesian(xlim = c(1.5,4.0),ylim= c(0,0.1))
myPlot
myPlot <- myPlot + coord_cartesian(xlim = c(-0.5,0.5),ylim= c(0.35,0.45))
myPlot
myPlot <- myPlot + coord_cartesian(xlim = c(1.5,4.0),ylim= c(0,0.1)) + ggtitle("Tail Zoom: Normal distribution and t-distrbution with df = 1999, 24, 9")
myPlot
myPlot <- myPlot + coord_cartesian(xlim = c(1.75,4.5),ylim= c(0,0.1)) + ggtitle("Tail Zoom: Normal distribution and t-distrbution with df = 1999, 24, 9")
myPlot
myPlot <- myPlot + coord_cartesian(xlim = c(-0.5,0.5),ylim= c(0.35,0.45)) + ggtitle("Head Zoom: Normal distribution and t-distrbution with df = 1999, 24, 9")
myPlot
myPlot <- myPlot + coord_cartesian(xlim = c(-1.0,1.0),ylim= c(0.3,0.4)) + ggtitle("Head Zoom: Normal distribution and t-distrbution with df = 1999, 24, 9")
myPlot
qt(0.025, 9)
pt(-2.262157, 9)
pt(1.96)
pt(1.96, 9)
1 - pt(1.96, 9)
2 * (1- pnorm(1.96))
2 * (1- pt(1.96, 9))
2 * (1- pt(1.96, 199))
2 * (1- pt(1.96, 24))
critical.t <- function(){
cat("\n","\bEnter Alpha Level","\n")
alpha<-scan(n=1,what = double(0),quiet=T)
cat("\n","\b1 Tailed or 2 Tailed:\nEnter either 1 or 2","\n")
tt <- scan(n=1,what = double(0),quiet=T)
cat("\n","\bEnter Number of Observations","\n")
n <- scan(n=1,what = double(0),quiet=T)
cat("\n\nCritical Value =",qt(1-(alpha/tt), n-2), "\n")
}
critical.t()
?scan
pt(1.753, 15)
qt(0.025, 9)
pt(2.262157, 9)
twoTailAlpha.t <- function(){
cat("\n","\bEnter cutoff Level","\n")
cutoffValue <- scan(n=1,what = numeric,quiet=T)
cat("\n","\bEnter sample size","\n")
sampleSize <- scan(n=1,what = numeric,quiet=T)
cat("\n\nAlpha Value =",pt(cutoffValue, sampleSize, "\n")
}
twoTailAlpha.t()
twoTailAlpha.t <- function() {
cat("\n","\bEnter cutoff Level","\n")
cutoffValue <- scan(n=1,what = numeric,quiet=T)
cat("\n","\bEnter sample size","\n")
sampleSize <- scan(n=1, what = numeric, quiet=T)
cat("\n\nAlpha Value =",pt(cutoffValue, sampleSize, "\n")
}
twoTailAlpha.t()
twoTailAlpha.t <- function() {
cat("\n","\bEnter cutoff Level","\n")
cutoffValue <- scan(n=1,what = numeric,quiet=T)
cat("\n","\bEnter sample size","\n")
sampleSize <- scan(n=1, what = numeric, quiet=T)
cat("\n\nAlpha Value =",pt(cutoffValue, sampleSize), "\n")
}
twoTailAlpha.t()
twoTailAlpha.t <- function() {
cat("\n","\bEnter cutoff Level","\n")
cutoffValue <- scan(n=1,what = numeric(0),quiet=T)
cat("\n","\bEnter sample size","\n")
sampleSize <- scan(n=1, what = numeric(0), quiet=T)
cat("\n\nAlpha Value =",pt(cutoffValue, sampleSize), "\n")
}
twoTailAlpha.t()
twoTailAlpha.t <- function() {
cat("\n","\bEnter cutoff Level","\n")
cutoffValue <- scan(n=1,what = numeric(0),quiet=T)
cat("\n","\bEnter sample size","\n")
sampleSize <- scan(n=1, what = numeric(0), quiet=T)
cat("\n\nAlpha Value =",1 - pt(cutoffValue, sampleSize - 1), "\n")
}
twoTailAlpha.t()
twoTailAlpha.t()
1 - pnorm(1.96)
y   <- dnorm(x,mean=0, sd=1)
plot(x,y, type="l", lwd=1)
dg <- data.frame(x,y)
xx <- seq(-5, 5, length=1000)
yy1 <- dt(xx, 9)
yy2 <- dt(xx, 24)
yy3 <- dt(xx, 199)
dd <- data.frame(xx=c(x, xx,xx, xx), yy <- c(y, yy3, yy2, yy1), sd = rep(c("Normal", "df=199", "df=24", "df=9"), each=1000))
library("ggplot2")
xy <- data.frame(x,y)
myPlot <- ggplot(xy, aes(x, y))
myPlot <- myPlot + geom_line(size=1.5, col="Red")
myPlot
#myPlot <- myPlot + ggplot(data = dg, aes(xx, yy, col="Red") + geom_line(size=0.75))
myPlot <- myPlot + geom_line(data = dd, aes(xx, yy, col=factor(sd))) + geom_line(size=0.75) +
ggtitle("Normal distribution and t-distrbution with df = 1999, 24, 9") + labs(x="X", y="Density") +
theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=24, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22)) +
theme(legend.title=element_text(colour="Black", size=16, face="bold")) + scale_colour_discrete(name = "Normal and T-Distribution") +
guides(col = guide_legend(reverse = TRUE)) + scale_y_continuous(limits = c(0.0, 0.5)) + scale_x_continuous(limits = c(-5, 5))
myPlot
qt(1.96, 9)
qt(0.05, 9)
pt(1.96. 9)
pt(1.96, 9)
twoTailAlpha.t <- function() {
cat("\n","\bEnter cutoff Level","\n")
cutoffValue <- scan(n=1,what = numeric(0),quiet=T)
cat("\n","\bEnter sample size","\n")
sampleSize <- scan(n=1, what = numeric(0), quiet=T)
tDistributionAlpha <- 1 - pt(cutoffValue, sampleSize - 1)
cat("\n\nAlpha Value =", tDistributionAlpha, "\n")
cat("\n\nProbability error =", (1 - pnorm(cutoffValue) -  tDistributionAlpha), "\n")
}
twoTailAlpha.t()
twoTailAlpha.t <- function() {
cat("\n","\bEnter cutoff Level","\n")
cutoffValue <- scan(n=1,what = numeric(0),quiet=T)
cat("\n","\bEnter sample size","\n")
sampleSize <- scan(n=1, what = numeric(0), quiet=T)
tDistributionAlpha <- 1 - pt(cutoffValue, sampleSize - 1)
cat("\n\nAlpha Value =", tDistributionAlpha, "\n")
cat("\n\nProbability error =", (1 - pnorm(cutoffValue) -  tDistributionAlpha)/100, "% \n")
}
twoTailAlpha.t()
cat("\n","\bEnter cutoff Level","\n")
cutoffValue <- scan(n=1,what = numeric(0),quiet=T)
sampleSize <- scan(n=1, what = numeric(0), quiet=T)
cat("\n\nAlpha Value =", tDistributionAlpha, "\n")
cat("\n\nProbability error =", (1 - pnorm(cutoffValue) -  tDistributionAlpha)/100, "% \n")
}
twoTailAlpha.t <- function() {
cat("\n","\bEnter cutoff Level","\n")
cutoffValue <- scan(n=1,what = numeric(0),quiet=T)
cat("\n","\bEnter sample size","\n")
sampleSize <- scan(n=1, what = numeric(0), quiet=T)
tDistributionAlpha <- 1 - pt(cutoffValue, sampleSize - 1)
cat("\n\nAlpha Value =", tDistributionAlpha, "\n")
cat("\n\nProbability error =", (1 - pnorm(cutoffValue) -  tDistributionAlpha)/100, "% \n")
}
twoTailAlpha.t()
twoTailAlpha.t <- function() {
cat("\n","\bEnter cutoff Level","\n")
cutoffValue <- scan(n=1,what = numeric(0),quiet=T)
cat("\n","\bEnter sample size","\n")
sampleSize <- scan(n=1, what = numeric(0), quiet=T)
tDistributionAlpha <- 1 - pt(cutoffValue, sampleSize - 1)
cat("\n\nComputed Alpha Value for t Distribution with df=", sampleSize -1, "=", tDistributionAlpha, "\n")
cat("\n\nProbability error =", (1 - pnorm(cutoffValue) -  tDistributionAlpha)/100, "% \n")
}
twoTailAlpha.t()
?numeric
twoTailAlpha.t <- function() {
cat("\n","\bEnter test cutoff Level : ","\n")
cutoffValue <- scan(n=1, what = numeric(0), quiet=T)
cat("\n","\bEnter sample size for t-Distribution","\n")
sampleSize <- scan(n=1, what = numeric(0), quiet=T)
tDistributionAlpha <- 1 - pt(cutoffValue, sampleSize - 1)
cat("\n\nComputed Alpha Value for t Distribution with df=", sampleSize -1, "is", tDistributionAlpha, "\n")
cat("\nProbability error =", (1 - pnorm(cutoffValue) -  tDistributionAlpha)/100, "% \n")
}
twoTailAlpha.t()
pt(- 0.7745966, 14)
qt(2.228, 9)
pt(2.228, 9)
1 - 0.9735654
pnorm(1.96)
1 - pt(2.228, 9)
1 - pt(1.96, 9)
pnorm(1.812)
qnorm(0.0408222)
qnorm(1 - 0.0408222)
?polygon
x   <- seq(-5, 5,length=1000)
y   <- dnorm(x,mean=0, sd=1)
plot(x,y, type="l", lwd=1)
dg <- data.frame(x,y)
xx <- seq(-5, 5, length=1000)
yy1 <- dt(xx, 9)
yy2 <- dt(xx, 24)
yy3 <- dt(xx, 199)
dd <- data.frame(xx=c(x, xx,xx, xx), yy <- c(y, yy3, yy2, yy1), sd = rep(c("Normal", "df=199", "df=24", "df=9"), each=1000))
library("ggplot2")
xy <- data.frame(x,y)
myPlot <- ggplot(xy, aes(x, y))
myPlot <- myPlot + geom_line(size=1.5, col="Red")
myPlot
#myPlot <- myPlot + ggplot(data = dg, aes(xx, yy, col="Red") + geom_line(size=0.75))
myPlot <- myPlot + geom_line(data = dd, aes(xx, yy, col=factor(sd))) + geom_line(size=0.75) +
ggtitle("Normal distribution and t-distrbution with df = 1999, 24, 9") + labs(x="X", y="Density") +
theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=24, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22)) +
theme(legend.title=element_text(colour="Black", size=16, face="bold")) + scale_colour_discrete(name = "Normal and T-Distribution") +
guides(col = guide_legend(reverse = TRUE)) + scale_y_continuous(limits = c(0.0, 0.5)) + scale_x_continuous(limits = c(-5, 5))
myPlot
polygon(xx > 1.96, yy, col="red")
length(xx)
length(yy)
polygon(x > 1.96, y, col="red")
?rev
points(x,y,type="l",col="red")
polygon(c(x,rev(x)),c(y,rev(y)),col="skyblue")
x
y
plot(x,y)
shade <- rbind(c(1.96,0), subset(dg, x > 1.96), c(dg[nrow(dg), "X"], 0))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
shade <- rbind(c(1.96,0), c(-1.96,0), subset(dg, (x < -1.96) | (x > 1.96), c(dg[nrow(dg), "X"], 0))
shade <- rbind(c(1.96,0), c(-1.96,0), subset(dg, (x < -1.96) | (x > 1.96)), c(dg[nrow(dg), "X"], 0))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
shade <- rbind(c(1.96,0), subset(dg, (x < -1.96) | (x > 1.96)), c(dg[nrow(dg), "X"], 0))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
shade <- rbind(c(1.96,0), subset(dg, (x < -1.96) | (x > 1.96)), c(dg[nrow(dg), "x"], 0))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
shade <- rbind(c(1.96,0), subset(dg, ((x > 1.96)), c(dg[nrow(dg), "x"], 0))
shade <- rbind(c(1.96,0), subset(dg, x > 1.96), c(dg[nrow(dg), "x"], 0))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
subset(dg, x > 1.96)
junk <- subset(dg, x > 1.96)
nrow(junk)
junk <- subset(dg, x > 1.96 | x < -1.96)
nrow(junk)
junk
shade <- rbind(c(1.96,0), subset(dg, ((x > 1.96) | (x < -1.96)), c(dg[nrow(dg), "x"], 0))
shade <- rbind(c(1.96,0), subset(dg, ((x > 1.96) | (x < -1.96))), c(dg[nrow(dg), "x"], 0))
dg[nrow(dg), "x"]
nrow(dg)
nrow(dg)dg[5]
dg[5]
dg[5,]
nrow(dg)
dg[1000, x]
dg[1000, "x"]
dg[1000, "-x"]
dg[1000, -"x"]
dg[0, "x"]
dg[1, "x"]
shade <- rbind(c(1.96,0), subset(dg, ((x > 1.96) | (x < -1.96))), c(dg[nrow(dg), "x"], 0))
shade2 <- rbind(c(-1.96,0), subset(dg, ((x > 1.96) | (x < -1.96))), c(dg[1, "x"], 0))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot <- myPlot + geom_polygon(data = shade2, aes(x, y))
myplot
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0))
shade2 <- rbind(c(-1.96,0), subset(dg, x < -1.96), c(dg[1, "x"], 0))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot <- myPlot + geom_polygon(data = shade2, aes(x, y))
myplot
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0))
shade2 <- rbind(c(-1.96,0), subset(dg, x < -1.96), c(dg[1, "x"], 0))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
myplot <- myPlot + geom_polygon(data = shade2, aes(x, y))
myplot
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0))
shade2 <- rbind(c(-1.96,0), subset(dg, x < -1.96), c(dg[1, "x"], 0))
myplot <- myPlot + geom_polygon(data = shade2, aes(x, y))
myplot
shade2 <- rbind(c(-1.96,0), subset(dg, x < -1.96), 0, c(dg[1, "x"]))
myplot
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0))
shade2 <- rbind(c(-1.96,0), subset(dg, x < -1.96), 0, c(dg[1, "x"]))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
myplot <- myPlot + geom_polygon(data = shade2, aes(x, y))
myplot
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0), c(-1.96,0), subset(dg, x < -1.96), 0, c(dg[1, "x"]))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0), c(-1.96,0), subset(dg, x < -1.96), -1.96, c(dg[1, "x"]))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0), c(-1.96,0), subset(dg, x < -1.96), 1.96, c(dg[1, "x"]))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
rm(myplot)
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0), c(-1.96,0), subset(dg, x < -1.96), 0, c(dg[1, "x"]))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
dg[1, "x"]
c(dg[1, "x"])
c(dg[nrow(dg), "x"], 0)
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0), c(-1.96,0), subset(dg, x < -1.96), c(dg[1, "x"], 0))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
c(dg[1, "x"], 0)
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0), c(-1.96,0),  c(dg[1, "x"], 0), subset(dg, x < -1.96))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
subset(dg, x < -1.96)
c(-1.96,0)
c(dg[1, "x"], 0)
subset(dg, x < -1.96)
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0),   c(dg[1, "x"], 0), c(-1.96,0), subset(dg, x < -1.96))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0))
shade <- shade + rbind(c(dg[1, "x"], 0), c(-1.96,0), subset(dg, x < -1.96))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y))
myplot
shad2e <-rbind(c(dg[1, "x"], 0), c(-1.96,0), subset(dg, x < -1.96))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y)) + geom_polygon(data = shad2e, aes(x, y))
myplot
shade <- rbind(c(1.96,0), subset(dg, (x > 1.96)), c(dg[nrow(dg), "x"], 0))
shade2 <-rbind(c(dg[1, "x"], 0), c(-1.96,0), subset(dg, x < -1.96))
shade2
shade2 <-rbind(c(dg[1, "x"], 0), subset(dg, x < -1.96), c(-1.96,0))
shade2
shade2 <-rbind(c(dg[1, "x"], 0), subset(dg, x < -1.96))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y)) + geom_polygon(data = shade2, aes(x, y))
myplot
shade2
shade2 <-rbind(subset(dg, x < -1.96))
myplot <- myPlot + geom_polygon(data = shade, aes(x, y)) + geom_polygon(data = shade2, aes(x, y))
myplot
